name: go-ci

on:
  pull_request:
    branches: [ master ]

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
          fetch-depth: 0
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v2
      with:
        version: v1.29
  unit-tests:
    name: unit-tests
    strategy:
      matrix:
        go-version: [1.15.x]
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
      with:
          persist-credentials: false
    - name: Run Go mod tidy
      run: go mod tidy
    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
          ~/Library/Caches/go-build
          %LocalAppData%\go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.OS }}-build-${{ env.cache-name }}-
          ${{ runner.OS }}-build-
          ${{ runner.OS }}-
    - name: Get go-junit-report module
      env:
        GO111MODULE: off
      run: |
        go get -u github.com/jstemmer/go-junit-report
    - name: Get Modules
      run: |
        go mod vendor
    - name: Test and Generate Report
      run: |
        go test -mod=vendor -v ./... -count=1 -coverprofile cover.out 2>&1 | go-junit-report -set-exit-code -go-version ${{ matrix.go-version }} -package-name "github.com/Checkmarx/kics/test" > test-report-${{ matrix.os }}.xml
    - name: Archive unit tests report
      uses: actions/upload-artifact@v2
      with:
        name: unit-tests-report-${{ matrix.os }}-${{ github.event.pull_request.head.sha }}
        path: |
          test-report*.xml
    - name: CodeCov
      if: matrix.os == 'ubuntu-latest'
      run: |
        bash <(curl -s https://codecov.io/bash)
    - name: Check if total coverage is greater then 0
      if: matrix.os == 'ubuntu-latest'
      run: |
        CODE_COV=$(go tool cover -func cover.out | grep total | awk '{print substr($3, 1, length($3)-1)}')
        EXPECTED_CODE_COV=0
        var=$(awk 'BEGIN{ print "'$CODE_COV'"<"'$EXPECTED_CODE_COV'" }')
        if [ "$var" -eq 1 ];then
          echo "Your code coverage is too low. Coverage precentage is: $CODE_COV"
          exit 1
        else
          echo "Your code coverage test passed! Coverage precentage is: $CODE_COV"
          exit 0
        fi
