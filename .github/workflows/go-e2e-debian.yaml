name: go-e2e-debian

on:
  pull_request:
    branches: [master]

jobs:
  e2e-debian-tests:
    name: e2e-debian-tests
    strategy:
      fail-fast: false
      matrix:
        go-version: [1.24.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@85880fa0301c86cca9da44039ee3bb12d3bedbfa # 0.12.1
        with:
          access_token: ${{ github.token }}
      - name: Check out code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ matrix.go-version }}
      - name: Print go env
        run: go env
      - name: Get Modules
        run: go mod vendor
      - name: Set up Node v14
        uses: actions/setup-node@v6
        with:
          node-version: "20"
      - name: Install mock server
        run: npm ci
        working-directory: .github/scripts/server-mock
      - name: Start mock server
        run: (npm run start&)
        working-directory: .github/scripts/server-mock
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      - name: Cache Docker layers
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.ref }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ github.ref }}
      - name: Append Entrypoint in dockerfile
        run: |
          echo "ENTRYPOINT [\"/app/bin/kics\"]" >> docker/Dockerfile.debian
      - name: Get short SHA
        run: echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-8)" >> $GITHUB_ENV
      - name: Build
        id: docker_build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          load: true
          context: ./
          file: ./docker/Dockerfile.debian
          builder: ${{ steps.buildx.outputs.name }}
          push: false
          tags: kics:e2e-debian-tests-${{ github.sha }}
          build-args: |
            VERSION=development
            COMMIT=${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      - name: Display PWD / Files
        run: |
          pwd
          ls
      - name: Set Output Permissions
        run: |
          sudo chmod -R 777 ./e2e
      - name: Run E2E Tests
        env:
          E2E_KICS_DOCKER: kics:e2e-debian-tests-${{ github.sha }}
          E2E_KICS_QUERIES_PATH: ${{ steps.getbin.outputs.queries }}
        run: |
          go test -tags dev "github.com/Checkmarx/kics/v2/e2e" -timeout 1500s -json > results.json
      - name: Generate E2E Report
        if: always()
        env:
          E2E_KICS_DOCKERFILE: docker/Dockerfile.debian
        run: |
          CWD=$(pwd)
          cd .github/scripts/report
          go mod tidy
          go build
          ./e2e-report -test-path ${CWD} -test-name results.json -report-path ${CWD} -report-name e2e-report.html
      - name: Get docker name
        run: |
          DOCKER_NAME=$(echo docker/Dockerfile.debian | sed 's/\//-/')
      - name: Archive test report
        if: always()
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: e2e-tests-report-dockerfile-$DOCKER_NAME
          path: e2e-report.html
          # dummy
