name: go-ci-integration

on:
  pull_request:
    branches: [master]

jobs:
  integration-tests:
    name: integration-tests
    strategy:
      matrix:
        go-version: [1.15.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
      with:
          persist-credentials: false
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@master
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.ref }}
        restore-keys: |
          ${{ runner.os }}-buildx-${{ github.ref }}
    - name: Build
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        load: true
        context: ./
        file: ./Dockerfile
        builder: ${{ steps.buildx.outputs.name }}
        push: false
        tags:  kics:${{ github.sha }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
    - name: Run docker image and generate results.json
      run: |
        time docker run -v ${PWD}/assets/queries:/path -e SENTRY_DSN=${{secrets.SENTRY_DSN}} kics:${{ github.sha }} -p "/path" -o "/path/results.json"
    - name: Assert queries_total > 0 in results.json
      id: assert_queries_total
      uses: sergeysova/jq-action@v2
      with:
        cmd: jq '.queries_total' ${PWD}/assets/queries/results.json | xargs -i{} test {} -gt 0
    - name: Assert total_counter > 0 in results.json
      id: assert_total_counter
      uses: sergeysova/jq-action@v2
      with:
        cmd: jq '.total_counter' ${PWD}/assets/queries/results.json | xargs -i{} test {} -gt 0
    - name: Assert files_scanned > 0 in results.json
      id: assert_files_scanned
      uses: sergeysova/jq-action@v2
      with:
        cmd: jq '.files_scanned' ${PWD}/assets/queries/results.json | xargs -i{} test {} -gt 0
    - name: Assert queries_failed_to_execute == 0 in results.json
      id: assert_queries_failed_to_execute
      uses: sergeysova/jq-action@v2
      with:
        cmd: jq '.queries_failed_to_execute' ${PWD}/assets/queries/results.json | xargs -i{} test {} -eq 0
    - name: Assert files_failed_to_scan == 0 in results.json
      id: assert_files_failed_to_scan
      uses: sergeysova/jq-action@v2
      with:
        cmd: jq '.files_failed_to_scan' ${PWD}/assets/queries/results.json | xargs -i{} test {} -eq 0
    - name: Display results
      run: |
        cat  ${PWD}/assets/queries/results.json
