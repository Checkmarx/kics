name: validate-pr-title
on:
  pull_request:
    types: [opened, synchronize, edited, reopened]
    branches: 
      - master
      - feat918
  pull_request_target:
    types: [opened, synchronize, edited, reopened]
    branches: 
      - master
      - feat918

jobs:
  title-check:
    runs-on: ubuntu-latest
    env:
      ERROR_MSG: "The PR title does not match the required format: <type>(<tag>): <title>"
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        persist-credentials: false
        sparse-checkout: |
          .github/scripts/pr-info/get_title_tags.py
          .github/pr-title-tags.yaml
    - name: Print PR Title
      run: echo "${{ github.event.pull_request.title }}"
    - name: Set up Python 
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"
    - name: Install dependencies
      run: python3 -m pip install --upgrade pip pyyaml
    - name: Check PR Title
      run: |
        regex=$(python3 .github/scripts/pr-info/get_title_tags.py)
        echo "Title regex: $regex"
        title="${{ github.event.pull_request.title }}"
        echo $title | grep -Pq "$regex" || (echo "$ERROR_MSG" && exit 1)
  labels-check:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        persist-credentials: false
        sparse-checkout: |
          .github/scripts/pr-info/get_pr_keywords.py
          .github/keywords.yaml
    - name: Get username
      run: echo "USERNAME=${{ github.event.pull_request.user.login }}" >> $GITHUB_ENV
    - name: Install JQ
      run: sudo apt-get install jq
    - name: Get title
      run: echo "TITLE=${{ github.event.pull_request.title }}" >> $GITHUB_ENV
    - name: Check user username
      run: |
        response=$(curl -s -H "Authorization: token ${{ secrets.KICS_BOT_PAT }}" "https://api.github.com/orgs/Checkmarx/teams/kics-core-team/members")
        team_members=$(echo "$response" | jq -r '.[].login')
        if echo "${team_members[@]}" | grep -Pq "^$USERNAME$"; then
          echo "Contributor belongs to Checkmarx organization"
          is_member="true"
        else
          echo "Contributor does not belong to Checkmarx organization"
          is_member="false"
        fi
        echo "IS_MEMBER=$is_member" >> $GITHUB_ENV
    - name: Add community label if user does not belong to Checkmarx Organization
      run: |
        if [[ "$IS_MEMBER" == "false" ]]; then
          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -X POST -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/labels -d '{"labels": ["community"]}'
        fi
    - name: Add feature or feature request label
      run: |
        if [[ "$TITLE" == feat* ]]; then
          if [[ "$IS_MEMBER" == "true" ]]; then
            echo "Adding 'feature' label..."
            curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -X POST -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/labels -d '{"labels": ["feature"]}'
          else
            echo "Adding 'feature request' label..."
            curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -X POST -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/labels -d '{"labels": ["feature request"]}'
          fi
        fi
    - name: Add documentation label
      run: |
        if [[ "$TITLE" == docs* ]]; then
          echo "Adding 'documentation' label..."
          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -X POST -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/labels -d '{"labels": ["documentation"]}'
        fi
    - name: Add bug label
      run: |
        if echo "$TITLE" | grep -iqP "\\bbugs?\\b"; then
          echo "Adding 'bug' label..."
          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -X POST -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/labels -d '{"labels": ["bug"]}'
        fi
    - name: Add query label
      run: |
        if echo "$TITLE" | grep -iqP "\\bquer(y|ies)\\b"; then
          echo "Adding 'query' label..."
          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -X POST -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/labels -d '{"labels": ["query"]}'
        fi
    - name: Set up Python 
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"
    - name: Install dependencies
      run: python3 -m pip install --upgrade pip pyyaml
    - name: Load keywords from YAML
      id: load-keywords
      run: |
        echo "::set-output name=keywords::$(python3 .github/scripts/pr-info/get_pr_keywords.py)"
    - name: Check title for keywords of platforms and cloud providers to add labels
      run: |
        eval "${{ steps.load-keywords.outputs.keywords }}"
        declare -p keywords
        for keyword in "${!keywords[@]}"; do
          if echo "$TITLE" | grep -iq "\\b$keyword\\b"; then
            label=${keywords[$keyword]}
            echo "Adding '$label' label..."
            curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -X POST -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/labels -d "{\"labels\": [\"$label\"]}"
          fi
        done
