name: release-docker-image

on:
  release:
    types: [published]

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    if: "!github.event.release.prerelease"
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get Release version
        id: get-version
        run: |
          echo "::set-output name=version::$(git describe --match='v*' --tags --abbrev=0)"
      - uses: toko-bifrost/ms-teams-deploy-card@master
        if: always()
        with:
          github-token: ${{ secrets.KICS_BOT_PAT }}
          webhook-uri: ${{ secrets.MSTEAMS_WEBHOOK_URL }}
          card-layout-start: cozy
          card-layout-exit: complete
          show-on-start: true
          show-on-exit: true
          custom-actions: |
            - name: View CI Logs
              value: https://github.com/Checkmarx/kics/actions/runs/${{ github.run_id }}
            - name: View HEAD Commit
              value: https://github.com/Checkmarx/kics/commit/${{ github.sha }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push scratch to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: checkmarx/kics:latest,checkmarx/kics:${{ steps.get-version.outputs.version }}
          build-args: |
            VERSION=${{ steps.get-version.outputs.version }}
            COMMIT=${{ github.sha }}
      - name: Push alpine to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.integration
          push: true
          tags: checkmarx/kics:latest-alpine,checkmarx/kics:${{ steps.get-version.outputs.version }}-alpine
          build-args: |
            VERSION=${{ steps.get-version.outputs.version }}
            COMMIT=${{ github.sha }}
      - name: Update repo description
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: docs/dockerhub.md
      - name: Export Image Digests
        run: |
          VERSION=${{ steps.get-version.outputs.version }}

          docker inspect --format='{{.RepoDigests}}' \
            checkmarx/kics:$VERSION | sed -r 's/\[checkmarx\/kics@(sha256:)(.*)\]/\1\2/g' > digest

          printf "|%-30s| %70s|\n" "$VERSION" "$(cat digest)" >> docs/docker-images-digest.md

          docker inspect --format='{{.RepoDigests}}' \
            checkmarx/kics:$VERSION-alpine | sed -r 's/\[checkmarx\/kics@(sha256:)(.*)\]/\1\2/g' > digest-latest

          printf "|%-30s| %70s|\n" "${VERSION}-alpine" "$(cat digest-latest)" >> docs/docker-images-digest.md
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          title: "[kicsbot] Update Images Digest"
          token: ${{ secrets.KICS_BOT_PAT }}
          commit-message: "[kicsbot] Update Images Digest"
          delete-branch: true
          branch: feature/kicsbot-update-queries-docs
          body: |
            **Automated changes**
            Updating docker images digests
            Triggered by SHA: _${{ github.sha }}_
          labels: documentation
