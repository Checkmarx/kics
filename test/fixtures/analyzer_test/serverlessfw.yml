service: myservice
frameworkVersion: "2"

custom: 
  settings: 
    POSTS_TABLE: posts

provider: 
  environment: "${self:custom.settings}"
  iamRoleStatements: 
    - 
      Action: 
        - "dynamodb:DescribeTable"
        - "dynamodb:Scan"
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:DeleteItem"
      Effect: Allow
      Resource: 
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.settings.POSTS_TABLE}"
  lambdaHashingVersion: 20201221
  name: aws
  region: us-east-1
  runtime: nodejs12.x
  stage: dev

functions: 
  createPost: 
    events: 
      - 
        http: 
          method: POST
          path: /post
    handler: handler.createPost
  deletePost: 
    events: 
      - 
        http: 
          method: delete
          path: "/post/{id}"
    handler: handler.deletePost
  getAllPosts: 
    events: 
      - 
        http: 
          method: get
          path: /posts
    handler: handler.getAllPosts
  getPost: 
    events: 
      - 
        http: 
          method: get
          path: "/post/{id}"
    handler: handler.getPost
  getPosts: 
    events: 
      - 
        http: 
          method: get
          path: "/posts/{number}"
    handler: handler.getPosts
  updatePost: 
    events: 
      - 
        http: 
          method: put
          path: "/post/{id}"
    handler: handler.updatePost

resources: 
  Resources: 
    PostsTable: 
      Properties: 
        AttributeDefinitions: 
          - 
            AttributeName: id
            AttributeType: S
        KeySchema: 
          - 
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput: 
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: "${self:custom.settings.POSTS_TABLE}"
      Type: "AWS::DynamoDB::Table"
