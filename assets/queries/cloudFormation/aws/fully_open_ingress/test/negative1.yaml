Resources:
  Sample_Service:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref 'ECSCluster'
  Sample_Cluster:
    Type: AWS::ECS::Cluster

  # EC2 Security Group with inline IPv4 and IPv6 rules
  DBEC2SecurityGroupInline:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Inline IPv4 and IPv6 ingress"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 10000       #does not expose all ports
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 0
          CidrIpv6: 2607:f0d0:1002:51::4/56      #cidr not exposed 

  # EC2 Security Group with standalone ingress rules
  DBEC2SecurityGroupStandalone:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Standalone IPv4 and IPv6 ingress"
      VpcId: !Ref VPC

  DBEC2SecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref DBEC2SecurityGroupStandalone
      IpProtocol: "-1" 
      CidrIp: 192.162.0.0/16   #cidr not exposed 

  DBEC2SecurityGroupIngressIPv6:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref DBEC2SecurityGroupStandalone
      IpProtocol: tcp
      FromPort: 0
      ToPort: 10001       #does not expose all ports
      CidrIpv6: ::/0    

  # RDS Instance referencing all security groups
  DBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      PubliclyAccessible: true
      DBName: !Ref DBName
      Engine: MySQL
      VPCSecurityGroups:
        - !Ref DBEC2SecurityGroupInline
        - !Ref DBEC2SecurityGroupStandalone

